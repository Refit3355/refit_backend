<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.refit.app.domain.me.mapper.MeMapper">

    <!-- 주문 내역 조회 -->
    <select id="findOrdersByMemberId" resultType="com.refit.app.domain.me.dto.MyOrderItemDto">
        SELECT
            -- 주문/아이템 기본
            o.ORDER_ID           AS orderId,
            oi.ORDER_ITEM_ID     AS orderItemId,
            oi.PRODUCT_ID        AS productId,
            o.ORDER_CODE         AS orderCode,
            p.PRODUCT_NAME       AS productName,
            p.THUMBNAIL_URL      AS thumbnailUrl,
            oi.CREATED_AT        AS createdAt,
            oi.ORDER_STATUS      AS status,
            oi.ITEM_COUNT        AS quantity,
            oi.CANCELED_COUNT    AS canceledCount,
            (oi.ITEM_COUNT - oi.CANCELED_COUNT) AS quantityRemaining,
            p.BRAND_NAME         AS brand,

            -- 단가/원가/할인/라인 금액
            oi.ITEM_PRICE        AS unitPrice,
            oi.ORG_UNIT_PRICE    AS originalUnitPrice,
            oi.DISCOUNT_RATE     AS discountRate,
            oi.LINE_AMOUNT       AS lineAmount,

            -- 주문 레벨(무료배송/배송비/합계)
            o.GOODS_AMOUNT       AS originalMerchandiseTotal,
            o.DELIVERY_FEE       AS deliveryFee,
            -- DELIVERY_FEE = 0 이면 무료배송(1), 아니면 0
            CASE WHEN o.DELIVERY_FEE = 0 THEN 1 ELSE 0 END AS freeShippingApplied,

            -- 현재 시점 남아있는 상품 총액(이미 부분취소 반영)
            SUM(oi.ITEM_PRICE * (oi.ITEM_COUNT - oi.CANCELED_COUNT))
                OVER (PARTITION BY o.ORDER_ID) AS currentMerchandiseSubtotal

        FROM ORDERS o
                 JOIN ORDER_ITEM oi ON o.ORDER_ID = oi.ORDER_ID
                 JOIN PRODUCT p     ON oi.PRODUCT_ID = p.PRODUCT_ID
        WHERE o.MEMBER_ID = #{memberId}
          AND oi.ORDER_STATUS NOT IN (0, 4)
          AND oi.DELETED_AT IS NULL
        ORDER BY oi.CREATED_AT DESC
    </select>

    <!-- 조합 목록 조회 -->
    <select id="findCombinationsByMember" resultType="com.refit.app.domain.me.dto.MyCombinationDto">
        SELECT
            c.COMBINATION_ID   AS combinationId,
            c.MEMBER_ID        AS memberId,
            m.NICKNAME         AS nickname,
            m.PROFILE_URL      AS profileUrl,
            c.COMBINATION_NAME AS combinationName,
            c.LIKES            AS likes
        FROM COMBINATION c
                 JOIN MEMBER m ON c.MEMBER_ID = m.MEMBER_ID
        WHERE c.MEMBER_ID = #{memberId}
          AND c.DELETED_AT IS NULL
        ORDER BY c.CREATED_AT DESC
    </select>

    <!-- 조합 내 상품들 조회 -->
    <select id="findCombinationItems" resultType="com.refit.app.domain.me.dto.CombinationItemDto">
        SELECT
            p.PRODUCT_ID     AS productId,
            p.THUMBNAIL_URL  AS thumbnailUrl,
            p.PRICE          AS price,
            p.DISCOUNT_RATE  AS discountRate
        FROM COMBINATION_ITEM ci
                 JOIN PRODUCT p ON ci.PRODUCT_ID = p.PRODUCT_ID
        WHERE ci.COMBINATION_ID = #{combinationId}
        ORDER BY p.PRODUCT_ID ASC
            FETCH FIRST 6 ROWS ONLY
    </select>

    <!-- 프로필 이미지 갱신 -->
    <update id="updateProfileImage">
        UPDATE MEMBER
        SET PROFILE_URL = #{url},
            UPDATED_AT = SYSTIMESTAMP,
            UPDATED_BY = #{memberId}
        WHERE MEMBER_ID = #{memberId}
    </update>
</mapper>
